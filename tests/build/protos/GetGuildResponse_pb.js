/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Protos.BattleUnitAbilityState', null, global);
goog.exportSymbol('proto.Protos.BattleUnitState', null, global);
goog.exportSymbol('proto.Protos.CampaignElementIdentifier', null, global);
goog.exportSymbol('proto.Protos.CampaignElementProgress', null, global);
goog.exportSymbol('proto.Protos.CampaignNodeDifficulty', null, global);
goog.exportSymbol('proto.Protos.CurrencyItem', null, global);
goog.exportSymbol('proto.Protos.CurrencyType', null, global);
goog.exportSymbol('proto.Protos.EnrollmentStatus', null, global);
goog.exportSymbol('proto.Protos.EquipmentSlot', null, global);
goog.exportSymbol('proto.Protos.GetGuildResponse', null, global);
goog.exportSymbol('proto.Protos.Guild', null, global);
goog.exportSymbol('proto.Protos.GuildInventory', null, global);
goog.exportSymbol('proto.Protos.GuildInviteStatus', null, global);
goog.exportSymbol('proto.Protos.GuildInviteType', null, global);
goog.exportSymbol('proto.Protos.GuildMember', null, global);
goog.exportSymbol('proto.Protos.GuildMemberContribution', null, global);
goog.exportSymbol('proto.Protos.GuildMemberLevel', null, global);
goog.exportSymbol('proto.Protos.GuildProfile', null, global);
goog.exportSymbol('proto.Protos.GuildProgress', null, global);
goog.exportSymbol('proto.Protos.GuildRaidMember', null, global);
goog.exportSymbol('proto.Protos.GuildRaidProgress', null, global);
goog.exportSymbol('proto.Protos.GuildRaidResult', null, global);
goog.exportSymbol('proto.Protos.GuildRaidStatus', null, global);
goog.exportSymbol('proto.Protos.MemberContributionType', null, global);
goog.exportSymbol('proto.Protos.RaidState', null, global);
goog.exportSymbol('proto.Protos.Rarity', null, global);
goog.exportSymbol('proto.Protos.Skill', null, global);
goog.exportSymbol('proto.Protos.Stat', null, global);
goog.exportSymbol('proto.Protos.StatDef', null, global);
goog.exportSymbol('proto.Protos.StatMod', null, global);
goog.exportSymbol('proto.Protos.StatModStat', null, global);
goog.exportSymbol('proto.Protos.StatModTier', null, global);
goog.exportSymbol('proto.Protos.Unit', null, global);
goog.exportSymbol('proto.Protos.UnitStat', null, global);
goog.exportSymbol('proto.Protos.UnitTier', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.BattleUnitAbilityState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.BattleUnitAbilityState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.BattleUnitAbilityState.displayName = 'proto.Protos.BattleUnitAbilityState';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.BattleUnitAbilityState.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.BattleUnitAbilityState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.BattleUnitAbilityState} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.BattleUnitAbilityState.toObject = function(includeInstance, msg) {
  var f, obj = {
    abilityId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cooldown: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.BattleUnitAbilityState}
 */
proto.Protos.BattleUnitAbilityState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.BattleUnitAbilityState;
  return proto.Protos.BattleUnitAbilityState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.BattleUnitAbilityState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.BattleUnitAbilityState}
 */
proto.Protos.BattleUnitAbilityState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAbilityId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCooldown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.BattleUnitAbilityState} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.BattleUnitAbilityState.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.BattleUnitAbilityState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.BattleUnitAbilityState.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string ability_id = 1;
 * @return {string}
 */
proto.Protos.BattleUnitAbilityState.prototype.getAbilityId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.BattleUnitAbilityState.prototype.setAbilityId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.BattleUnitAbilityState.prototype.clearAbilityId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitAbilityState.prototype.hasAbilityId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 cooldown = 2;
 * @return {number}
 */
proto.Protos.BattleUnitAbilityState.prototype.getCooldown = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.BattleUnitAbilityState.prototype.setCooldown = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.BattleUnitAbilityState.prototype.clearCooldown = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitAbilityState.prototype.hasCooldown = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.BattleUnitState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.BattleUnitState.repeatedFields_, null);
};
goog.inherits(proto.Protos.BattleUnitState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.BattleUnitState.displayName = 'proto.Protos.BattleUnitState';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.BattleUnitState.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.BattleUnitState.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.BattleUnitState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.BattleUnitState} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.BattleUnitState.toObject = function(includeInstance, msg) {
  var f, obj = {
    unitId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    healthPercent: jspb.Message.getFieldWithDefault(msg, 5, ""),
    abilityStateList: jspb.Message.toObjectList(msg.getAbilityStateList(),
    proto.Protos.BattleUnitAbilityState.toObject, includeInstance),
    progressItem: jspb.Message.getFieldWithDefault(msg, 7, false),
    currentHealth: jspb.Message.getFieldWithDefault(msg, 8, 0),
    shieldPercent: jspb.Message.getFieldWithDefault(msg, 9, ""),
    turnPercent: jspb.Message.getFieldWithDefault(msg, 10, ""),
    maxHealth: jspb.Message.getFieldWithDefault(msg, 11, 0),
    hasFled: jspb.Message.getFieldWithDefault(msg, 12, false),
    maxShield: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.BattleUnitState}
 */
proto.Protos.BattleUnitState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.BattleUnitState;
  return proto.Protos.BattleUnitState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.BattleUnitState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.BattleUnitState}
 */
proto.Protos.BattleUnitState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHealthPercent(value);
      break;
    case 6:
      var value = new proto.Protos.BattleUnitAbilityState;
      reader.readMessage(value,proto.Protos.BattleUnitAbilityState.deserializeBinaryFromReader);
      msg.addAbilityState(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProgressItem(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentHealth(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setShieldPercent(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTurnPercent(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxHealth(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasFled(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxShield(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.BattleUnitState} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.BattleUnitState.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.BattleUnitState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.BattleUnitState.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getAbilityStateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.Protos.BattleUnitAbilityState.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 11));
  if (f != null) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 12));
  if (f != null) {
    writer.writeBool(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 13));
  if (f != null) {
    writer.writeInt64(
      13,
      f
    );
  }
};


/**
 * optional string unit_id = 1;
 * @return {string}
 */
proto.Protos.BattleUnitState.prototype.getUnitId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.BattleUnitState.prototype.setUnitId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.BattleUnitState.prototype.clearUnitId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasUnitId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string health_percent = 5;
 * @return {string}
 */
proto.Protos.BattleUnitState.prototype.getHealthPercent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Protos.BattleUnitState.prototype.setHealthPercent = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Protos.BattleUnitState.prototype.clearHealthPercent = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasHealthPercent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated BattleUnitAbilityState ability_state = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.BattleUnitAbilityState>}
 */
proto.Protos.BattleUnitState.prototype.getAbilityStateList = function() {
  return /** @type{!Array.<!proto.Protos.BattleUnitAbilityState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.BattleUnitAbilityState, 6));
};


/** @param {!Array.<!proto.Protos.BattleUnitAbilityState>} value */
proto.Protos.BattleUnitState.prototype.setAbilityStateList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.Protos.BattleUnitAbilityState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.BattleUnitAbilityState}
 */
proto.Protos.BattleUnitState.prototype.addAbilityState = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.Protos.BattleUnitAbilityState, opt_index);
};


proto.Protos.BattleUnitState.prototype.clearAbilityStateList = function() {
  this.setAbilityStateList([]);
};


/**
 * optional bool progress_item = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Protos.BattleUnitState.prototype.getProgressItem = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.Protos.BattleUnitState.prototype.setProgressItem = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.Protos.BattleUnitState.prototype.clearProgressItem = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasProgressItem = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 current_health = 8;
 * @return {number}
 */
proto.Protos.BattleUnitState.prototype.getCurrentHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.Protos.BattleUnitState.prototype.setCurrentHealth = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.Protos.BattleUnitState.prototype.clearCurrentHealth = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasCurrentHealth = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string shield_percent = 9;
 * @return {string}
 */
proto.Protos.BattleUnitState.prototype.getShieldPercent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.Protos.BattleUnitState.prototype.setShieldPercent = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.Protos.BattleUnitState.prototype.clearShieldPercent = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasShieldPercent = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string turn_percent = 10;
 * @return {string}
 */
proto.Protos.BattleUnitState.prototype.getTurnPercent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.Protos.BattleUnitState.prototype.setTurnPercent = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.Protos.BattleUnitState.prototype.clearTurnPercent = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasTurnPercent = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int64 max_health = 11;
 * @return {number}
 */
proto.Protos.BattleUnitState.prototype.getMaxHealth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Protos.BattleUnitState.prototype.setMaxHealth = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.Protos.BattleUnitState.prototype.clearMaxHealth = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasMaxHealth = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional bool has_fled = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Protos.BattleUnitState.prototype.getHasFled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.Protos.BattleUnitState.prototype.setHasFled = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.Protos.BattleUnitState.prototype.clearHasFled = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasHasFled = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 max_shield = 13;
 * @return {number}
 */
proto.Protos.BattleUnitState.prototype.getMaxShield = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.Protos.BattleUnitState.prototype.setMaxShield = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.Protos.BattleUnitState.prototype.clearMaxShield = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.BattleUnitState.prototype.hasMaxShield = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.CampaignElementIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.CampaignElementIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.CampaignElementIdentifier.displayName = 'proto.Protos.CampaignElementIdentifier';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.CampaignElementIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.CampaignElementIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.CampaignElementIdentifier} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.CampaignElementIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    campaignId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    campaignMapId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    campaignNodeId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    campaignNodeDifficulty: jspb.Message.getFieldWithDefault(msg, 4, 0),
    campaignMissionId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.CampaignElementIdentifier}
 */
proto.Protos.CampaignElementIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.CampaignElementIdentifier;
  return proto.Protos.CampaignElementIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.CampaignElementIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.CampaignElementIdentifier}
 */
proto.Protos.CampaignElementIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignMapId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignNodeId(value);
      break;
    case 4:
      var value = /** @type {!proto.Protos.CampaignNodeDifficulty} */ (reader.readEnum());
      msg.setCampaignNodeDifficulty(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaignMissionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.CampaignElementIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.CampaignElementIdentifier.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.CampaignElementIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.CampaignElementIdentifier.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!proto.Protos.CampaignNodeDifficulty} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string campaign_id = 1;
 * @return {string}
 */
proto.Protos.CampaignElementIdentifier.prototype.getCampaignId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.CampaignElementIdentifier.prototype.setCampaignId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.CampaignElementIdentifier.prototype.clearCampaignId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.CampaignElementIdentifier.prototype.hasCampaignId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string campaign_map_id = 2;
 * @return {string}
 */
proto.Protos.CampaignElementIdentifier.prototype.getCampaignMapId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Protos.CampaignElementIdentifier.prototype.setCampaignMapId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.CampaignElementIdentifier.prototype.clearCampaignMapId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.CampaignElementIdentifier.prototype.hasCampaignMapId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string campaign_node_id = 3;
 * @return {string}
 */
proto.Protos.CampaignElementIdentifier.prototype.getCampaignNodeId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Protos.CampaignElementIdentifier.prototype.setCampaignNodeId = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.CampaignElementIdentifier.prototype.clearCampaignNodeId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.CampaignElementIdentifier.prototype.hasCampaignNodeId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CampaignNodeDifficulty campaign_node_difficulty = 4;
 * @return {!proto.Protos.CampaignNodeDifficulty}
 */
proto.Protos.CampaignElementIdentifier.prototype.getCampaignNodeDifficulty = function() {
  return /** @type {!proto.Protos.CampaignNodeDifficulty} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.Protos.CampaignNodeDifficulty} value */
proto.Protos.CampaignElementIdentifier.prototype.setCampaignNodeDifficulty = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Protos.CampaignElementIdentifier.prototype.clearCampaignNodeDifficulty = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.CampaignElementIdentifier.prototype.hasCampaignNodeDifficulty = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string campaign_mission_id = 5;
 * @return {string}
 */
proto.Protos.CampaignElementIdentifier.prototype.getCampaignMissionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Protos.CampaignElementIdentifier.prototype.setCampaignMissionId = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Protos.CampaignElementIdentifier.prototype.clearCampaignMissionId = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.CampaignElementIdentifier.prototype.hasCampaignMissionId = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.CurrencyItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.CurrencyItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.CurrencyItem.displayName = 'proto.Protos.CurrencyItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.CurrencyItem.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.CurrencyItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.CurrencyItem} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.CurrencyItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    currency: jspb.Message.getFieldWithDefault(msg, 1, 1),
    quantity: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.CurrencyItem}
 */
proto.Protos.CurrencyItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.CurrencyItem;
  return proto.Protos.CurrencyItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.CurrencyItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.CurrencyItem}
 */
proto.Protos.CurrencyItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Protos.CurrencyType} */ (reader.readEnum());
      msg.setCurrency(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.CurrencyItem} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.CurrencyItem.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.CurrencyItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.CurrencyItem.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {!proto.Protos.CurrencyType} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional CurrencyType currency = 1;
 * @return {!proto.Protos.CurrencyType}
 */
proto.Protos.CurrencyItem.prototype.getCurrency = function() {
  return /** @type {!proto.Protos.CurrencyType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/** @param {!proto.Protos.CurrencyType} value */
proto.Protos.CurrencyItem.prototype.setCurrency = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.CurrencyItem.prototype.clearCurrency = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.CurrencyItem.prototype.hasCurrency = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 quantity = 2;
 * @return {number}
 */
proto.Protos.CurrencyItem.prototype.getQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.CurrencyItem.prototype.setQuantity = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.CurrencyItem.prototype.clearQuantity = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.CurrencyItem.prototype.hasQuantity = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.EquipmentSlot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.EquipmentSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.EquipmentSlot.displayName = 'proto.Protos.EquipmentSlot';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.EquipmentSlot.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.EquipmentSlot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.EquipmentSlot} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.EquipmentSlot.toObject = function(includeInstance, msg) {
  var f, obj = {
    equipmentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    slot: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.EquipmentSlot}
 */
proto.Protos.EquipmentSlot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.EquipmentSlot;
  return proto.Protos.EquipmentSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.EquipmentSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.EquipmentSlot}
 */
proto.Protos.EquipmentSlot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEquipmentId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSlot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.EquipmentSlot} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.EquipmentSlot.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.EquipmentSlot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.EquipmentSlot.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string equipment_id = 1;
 * @return {string}
 */
proto.Protos.EquipmentSlot.prototype.getEquipmentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.EquipmentSlot.prototype.setEquipmentId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.EquipmentSlot.prototype.clearEquipmentId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.EquipmentSlot.prototype.hasEquipmentId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 slot = 2;
 * @return {number}
 */
proto.Protos.EquipmentSlot.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.EquipmentSlot.prototype.setSlot = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.EquipmentSlot.prototype.clearSlot = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.EquipmentSlot.prototype.hasSlot = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GetGuildResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.GetGuildResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GetGuildResponse.displayName = 'proto.Protos.GetGuildResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GetGuildResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GetGuildResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GetGuildResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GetGuildResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    guild: (f = msg.getGuild()) && proto.Protos.Guild.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GetGuildResponse}
 */
proto.Protos.GetGuildResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GetGuildResponse;
  return proto.Protos.GetGuildResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GetGuildResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GetGuildResponse}
 */
proto.Protos.GetGuildResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Protos.Guild;
      reader.readMessage(value,proto.Protos.Guild.deserializeBinaryFromReader);
      msg.setGuild(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GetGuildResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GetGuildResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GetGuildResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GetGuildResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getGuild();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Protos.Guild.serializeBinaryToWriter
    );
  }
};


/**
 * optional Guild guild = 1;
 * @return {?proto.Protos.Guild}
 */
proto.Protos.GetGuildResponse.prototype.getGuild = function() {
  return /** @type{?proto.Protos.Guild} */ (
    jspb.Message.getWrapperField(this, proto.Protos.Guild, 1));
};


/** @param {?proto.Protos.Guild|undefined} value */
proto.Protos.GetGuildResponse.prototype.setGuild = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.Protos.GetGuildResponse.prototype.clearGuild = function() {
  this.setGuild(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GetGuildResponse.prototype.hasGuild = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.Guild = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.Guild.repeatedFields_, null);
};
goog.inherits(proto.Protos.Guild, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.Guild.displayName = 'proto.Protos.Guild';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.Guild.repeatedFields_ = [2,3,4,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.Guild.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.Guild.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.Guild} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.Guild.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.Protos.GuildProfile.toObject(includeInstance, f),
    memberList: jspb.Message.toObjectList(msg.getMemberList(),
    proto.Protos.GuildMember.toObject, includeInstance),
    inviteStatusList: jspb.Message.toObjectList(msg.getInviteStatusList(),
    proto.Protos.GuildInviteStatus.toObject, includeInstance),
    raidStatusList: jspb.Message.toObjectList(msg.getRaidStatusList(),
    proto.Protos.GuildRaidStatus.toObject, includeInstance),
    inventory: (f = msg.getInventory()) && proto.Protos.GuildInventory.toObject(includeInstance, f),
    raidResultList: jspb.Message.toObjectList(msg.getRaidResultList(),
    proto.Protos.GuildRaidResult.toObject, includeInstance),
    progress: (f = msg.getProgress()) && proto.Protos.GuildProgress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.Guild}
 */
proto.Protos.Guild.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.Guild;
  return proto.Protos.Guild.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.Guild} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.Guild}
 */
proto.Protos.Guild.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Protos.GuildProfile;
      reader.readMessage(value,proto.Protos.GuildProfile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 2:
      var value = new proto.Protos.GuildMember;
      reader.readMessage(value,proto.Protos.GuildMember.deserializeBinaryFromReader);
      msg.addMember(value);
      break;
    case 3:
      var value = new proto.Protos.GuildInviteStatus;
      reader.readMessage(value,proto.Protos.GuildInviteStatus.deserializeBinaryFromReader);
      msg.addInviteStatus(value);
      break;
    case 4:
      var value = new proto.Protos.GuildRaidStatus;
      reader.readMessage(value,proto.Protos.GuildRaidStatus.deserializeBinaryFromReader);
      msg.addRaidStatus(value);
      break;
    case 5:
      var value = new proto.Protos.GuildInventory;
      reader.readMessage(value,proto.Protos.GuildInventory.deserializeBinaryFromReader);
      msg.setInventory(value);
      break;
    case 6:
      var value = new proto.Protos.GuildRaidResult;
      reader.readMessage(value,proto.Protos.GuildRaidResult.deserializeBinaryFromReader);
      msg.addRaidResult(value);
      break;
    case 7:
      var value = new proto.Protos.GuildProgress;
      reader.readMessage(value,proto.Protos.GuildProgress.deserializeBinaryFromReader);
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.Guild} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Guild.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.Guild.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Guild.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Protos.GuildProfile.serializeBinaryToWriter
    );
  }
  f = this.getMemberList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Protos.GuildMember.serializeBinaryToWriter
    );
  }
  f = this.getInviteStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.Protos.GuildInviteStatus.serializeBinaryToWriter
    );
  }
  f = this.getRaidStatusList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.Protos.GuildRaidStatus.serializeBinaryToWriter
    );
  }
  f = this.getInventory();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.Protos.GuildInventory.serializeBinaryToWriter
    );
  }
  f = this.getRaidResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.Protos.GuildRaidResult.serializeBinaryToWriter
    );
  }
  f = this.getProgress();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.Protos.GuildProgress.serializeBinaryToWriter
    );
  }
};


/**
 * optional GuildProfile profile = 1;
 * @return {?proto.Protos.GuildProfile}
 */
proto.Protos.Guild.prototype.getProfile = function() {
  return /** @type{?proto.Protos.GuildProfile} */ (
    jspb.Message.getWrapperField(this, proto.Protos.GuildProfile, 1));
};


/** @param {?proto.Protos.GuildProfile|undefined} value */
proto.Protos.Guild.prototype.setProfile = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.Protos.Guild.prototype.clearProfile = function() {
  this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Guild.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GuildMember member = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildMember>}
 */
proto.Protos.Guild.prototype.getMemberList = function() {
  return /** @type{!Array.<!proto.Protos.GuildMember>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildMember, 2));
};


/** @param {!Array.<!proto.Protos.GuildMember>} value */
proto.Protos.Guild.prototype.setMemberList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Protos.GuildMember=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildMember}
 */
proto.Protos.Guild.prototype.addMember = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Protos.GuildMember, opt_index);
};


proto.Protos.Guild.prototype.clearMemberList = function() {
  this.setMemberList([]);
};


/**
 * repeated GuildInviteStatus invite_status = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildInviteStatus>}
 */
proto.Protos.Guild.prototype.getInviteStatusList = function() {
  return /** @type{!Array.<!proto.Protos.GuildInviteStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildInviteStatus, 3));
};


/** @param {!Array.<!proto.Protos.GuildInviteStatus>} value */
proto.Protos.Guild.prototype.setInviteStatusList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Protos.GuildInviteStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildInviteStatus}
 */
proto.Protos.Guild.prototype.addInviteStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Protos.GuildInviteStatus, opt_index);
};


proto.Protos.Guild.prototype.clearInviteStatusList = function() {
  this.setInviteStatusList([]);
};


/**
 * repeated GuildRaidStatus raid_status = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildRaidStatus>}
 */
proto.Protos.Guild.prototype.getRaidStatusList = function() {
  return /** @type{!Array.<!proto.Protos.GuildRaidStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildRaidStatus, 4));
};


/** @param {!Array.<!proto.Protos.GuildRaidStatus>} value */
proto.Protos.Guild.prototype.setRaidStatusList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.Protos.GuildRaidStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildRaidStatus}
 */
proto.Protos.Guild.prototype.addRaidStatus = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.Protos.GuildRaidStatus, opt_index);
};


proto.Protos.Guild.prototype.clearRaidStatusList = function() {
  this.setRaidStatusList([]);
};


/**
 * optional GuildInventory inventory = 5;
 * @return {?proto.Protos.GuildInventory}
 */
proto.Protos.Guild.prototype.getInventory = function() {
  return /** @type{?proto.Protos.GuildInventory} */ (
    jspb.Message.getWrapperField(this, proto.Protos.GuildInventory, 5));
};


/** @param {?proto.Protos.GuildInventory|undefined} value */
proto.Protos.Guild.prototype.setInventory = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.Protos.Guild.prototype.clearInventory = function() {
  this.setInventory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Guild.prototype.hasInventory = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated GuildRaidResult raid_result = 6;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildRaidResult>}
 */
proto.Protos.Guild.prototype.getRaidResultList = function() {
  return /** @type{!Array.<!proto.Protos.GuildRaidResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildRaidResult, 6));
};


/** @param {!Array.<!proto.Protos.GuildRaidResult>} value */
proto.Protos.Guild.prototype.setRaidResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.Protos.GuildRaidResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildRaidResult}
 */
proto.Protos.Guild.prototype.addRaidResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.Protos.GuildRaidResult, opt_index);
};


proto.Protos.Guild.prototype.clearRaidResultList = function() {
  this.setRaidResultList([]);
};


/**
 * optional GuildProgress progress = 7;
 * @return {?proto.Protos.GuildProgress}
 */
proto.Protos.Guild.prototype.getProgress = function() {
  return /** @type{?proto.Protos.GuildProgress} */ (
    jspb.Message.getWrapperField(this, proto.Protos.GuildProgress, 7));
};


/** @param {?proto.Protos.GuildProgress|undefined} value */
proto.Protos.Guild.prototype.setProgress = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.Protos.Guild.prototype.clearProgress = function() {
  this.setProgress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Guild.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildInventory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.GuildInventory.repeatedFields_, null);
};
goog.inherits(proto.Protos.GuildInventory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildInventory.displayName = 'proto.Protos.GuildInventory';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.GuildInventory.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildInventory.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildInventory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildInventory} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildInventory.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencyItemList: jspb.Message.toObjectList(msg.getCurrencyItemList(),
    proto.Protos.CurrencyItem.toObject, includeInstance),
    currentDailyLimitList: jspb.Message.toObjectList(msg.getCurrentDailyLimitList(),
    proto.Protos.CurrencyItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildInventory}
 */
proto.Protos.GuildInventory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildInventory;
  return proto.Protos.GuildInventory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildInventory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildInventory}
 */
proto.Protos.GuildInventory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Protos.CurrencyItem;
      reader.readMessage(value,proto.Protos.CurrencyItem.deserializeBinaryFromReader);
      msg.addCurrencyItem(value);
      break;
    case 2:
      var value = new proto.Protos.CurrencyItem;
      reader.readMessage(value,proto.Protos.CurrencyItem.deserializeBinaryFromReader);
      msg.addCurrentDailyLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildInventory} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildInventory.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildInventory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildInventory.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCurrencyItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Protos.CurrencyItem.serializeBinaryToWriter
    );
  }
  f = this.getCurrentDailyLimitList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Protos.CurrencyItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CurrencyItem currency_item = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.CurrencyItem>}
 */
proto.Protos.GuildInventory.prototype.getCurrencyItemList = function() {
  return /** @type{!Array.<!proto.Protos.CurrencyItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.CurrencyItem, 1));
};


/** @param {!Array.<!proto.Protos.CurrencyItem>} value */
proto.Protos.GuildInventory.prototype.setCurrencyItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Protos.CurrencyItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.CurrencyItem}
 */
proto.Protos.GuildInventory.prototype.addCurrencyItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Protos.CurrencyItem, opt_index);
};


proto.Protos.GuildInventory.prototype.clearCurrencyItemList = function() {
  this.setCurrencyItemList([]);
};


/**
 * repeated CurrencyItem current_daily_limit = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.CurrencyItem>}
 */
proto.Protos.GuildInventory.prototype.getCurrentDailyLimitList = function() {
  return /** @type{!Array.<!proto.Protos.CurrencyItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.CurrencyItem, 2));
};


/** @param {!Array.<!proto.Protos.CurrencyItem>} value */
proto.Protos.GuildInventory.prototype.setCurrentDailyLimitList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Protos.CurrencyItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.CurrencyItem}
 */
proto.Protos.GuildInventory.prototype.addCurrentDailyLimit = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Protos.CurrencyItem, opt_index);
};


proto.Protos.GuildInventory.prototype.clearCurrentDailyLimitList = function() {
  this.setCurrentDailyLimitList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildInviteStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.GuildInviteStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildInviteStatus.displayName = 'proto.Protos.GuildInviteStatus';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildInviteStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildInviteStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildInviteStatus} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildInviteStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    guildId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expireTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    playerId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 1),
    leaderUnit: (f = msg.getLeaderUnit()) && proto.Protos.Unit.toObject(includeInstance, f),
    sentTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    playerLevel: jspb.Message.getFieldWithDefault(msg, 7, 0),
    playerName: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildInviteStatus}
 */
proto.Protos.GuildInviteStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildInviteStatus;
  return proto.Protos.GuildInviteStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildInviteStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildInviteStatus}
 */
proto.Protos.GuildInviteStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuildId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 4:
      var value = /** @type {!proto.Protos.GuildInviteType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 5:
      var value = new proto.Protos.Unit;
      reader.readMessage(value,proto.Protos.Unit.deserializeBinaryFromReader);
      msg.setLeaderUnit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSentTime(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlayerLevel(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildInviteStatus} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildInviteStatus.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildInviteStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildInviteStatus.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!proto.Protos.GuildInviteType} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = this.getLeaderUnit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.Protos.Unit.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string guild_id = 1;
 * @return {string}
 */
proto.Protos.GuildInviteStatus.prototype.getGuildId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.GuildInviteStatus.prototype.setGuildId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.GuildInviteStatus.prototype.clearGuildId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasGuildId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 expire_time = 2;
 * @return {number}
 */
proto.Protos.GuildInviteStatus.prototype.getExpireTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.GuildInviteStatus.prototype.setExpireTime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.GuildInviteStatus.prototype.clearExpireTime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasExpireTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string player_id = 3;
 * @return {string}
 */
proto.Protos.GuildInviteStatus.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Protos.GuildInviteStatus.prototype.setPlayerId = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.GuildInviteStatus.prototype.clearPlayerId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasPlayerId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GuildInviteType type = 4;
 * @return {!proto.Protos.GuildInviteType}
 */
proto.Protos.GuildInviteStatus.prototype.getType = function() {
  return /** @type {!proto.Protos.GuildInviteType} */ (jspb.Message.getFieldWithDefault(this, 4, 1));
};


/** @param {!proto.Protos.GuildInviteType} value */
proto.Protos.GuildInviteStatus.prototype.setType = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Protos.GuildInviteStatus.prototype.clearType = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Unit leader_unit = 5;
 * @return {?proto.Protos.Unit}
 */
proto.Protos.GuildInviteStatus.prototype.getLeaderUnit = function() {
  return /** @type{?proto.Protos.Unit} */ (
    jspb.Message.getWrapperField(this, proto.Protos.Unit, 5));
};


/** @param {?proto.Protos.Unit|undefined} value */
proto.Protos.GuildInviteStatus.prototype.setLeaderUnit = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.Protos.GuildInviteStatus.prototype.clearLeaderUnit = function() {
  this.setLeaderUnit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasLeaderUnit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 sent_time = 6;
 * @return {number}
 */
proto.Protos.GuildInviteStatus.prototype.getSentTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Protos.GuildInviteStatus.prototype.setSentTime = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.Protos.GuildInviteStatus.prototype.clearSentTime = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasSentTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 player_level = 7;
 * @return {number}
 */
proto.Protos.GuildInviteStatus.prototype.getPlayerLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.Protos.GuildInviteStatus.prototype.setPlayerLevel = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.Protos.GuildInviteStatus.prototype.clearPlayerLevel = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasPlayerLevel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string player_name = 8;
 * @return {string}
 */
proto.Protos.GuildInviteStatus.prototype.getPlayerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.Protos.GuildInviteStatus.prototype.setPlayerName = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.Protos.GuildInviteStatus.prototype.clearPlayerName = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildInviteStatus.prototype.hasPlayerName = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildMember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.GuildMember.repeatedFields_, null);
};
goog.inherits(proto.Protos.GuildMember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildMember.displayName = 'proto.Protos.GuildMember';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.GuildMember.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildMember.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildMember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildMember} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildMember.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    playerName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    playerLevel: jspb.Message.getFieldWithDefault(msg, 3, 0),
    memberLevel: jspb.Message.getFieldWithDefault(msg, 4, 2),
    leaderUnit: (f = msg.getLeaderUnit()) && proto.Protos.Unit.toObject(includeInstance, f),
    contribution: jspb.Message.getFieldWithDefault(msg, 6, 0),
    guildXp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    lastActivityTime: jspb.Message.getFieldWithDefault(msg, 8, 0),
    squadPower: jspb.Message.getFieldWithDefault(msg, 9, 0),
    lifetimeContribution: jspb.Message.getFieldWithDefault(msg, 10, 0),
    memberContributionList: jspb.Message.toObjectList(msg.getMemberContributionList(),
    proto.Protos.GuildMemberContribution.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildMember}
 */
proto.Protos.GuildMember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildMember;
  return proto.Protos.GuildMember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildMember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildMember}
 */
proto.Protos.GuildMember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlayerLevel(value);
      break;
    case 4:
      var value = /** @type {!proto.Protos.GuildMemberLevel} */ (reader.readEnum());
      msg.setMemberLevel(value);
      break;
    case 5:
      var value = new proto.Protos.Unit;
      reader.readMessage(value,proto.Protos.Unit.deserializeBinaryFromReader);
      msg.setLeaderUnit(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setContribution(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGuildXp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastActivityTime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSquadPower(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLifetimeContribution(value);
      break;
    case 11:
      var value = new proto.Protos.GuildMemberContribution;
      reader.readMessage(value,proto.Protos.GuildMemberContribution.deserializeBinaryFromReader);
      msg.addMemberContribution(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildMember} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildMember.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildMember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildMember.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {!proto.Protos.GuildMemberLevel} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = this.getLeaderUnit();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.Protos.Unit.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 7));
  if (f != null) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 10));
  if (f != null) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = this.getMemberContributionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.Protos.GuildMemberContribution.serializeBinaryToWriter
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.Protos.GuildMember.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.GuildMember.prototype.setPlayerId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.GuildMember.prototype.clearPlayerId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasPlayerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string player_name = 2;
 * @return {string}
 */
proto.Protos.GuildMember.prototype.getPlayerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Protos.GuildMember.prototype.setPlayerName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.GuildMember.prototype.clearPlayerName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasPlayerName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 player_level = 3;
 * @return {number}
 */
proto.Protos.GuildMember.prototype.getPlayerLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Protos.GuildMember.prototype.setPlayerLevel = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.GuildMember.prototype.clearPlayerLevel = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasPlayerLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GuildMemberLevel member_level = 4;
 * @return {!proto.Protos.GuildMemberLevel}
 */
proto.Protos.GuildMember.prototype.getMemberLevel = function() {
  return /** @type {!proto.Protos.GuildMemberLevel} */ (jspb.Message.getFieldWithDefault(this, 4, 2));
};


/** @param {!proto.Protos.GuildMemberLevel} value */
proto.Protos.GuildMember.prototype.setMemberLevel = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Protos.GuildMember.prototype.clearMemberLevel = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasMemberLevel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Unit leader_unit = 5;
 * @return {?proto.Protos.Unit}
 */
proto.Protos.GuildMember.prototype.getLeaderUnit = function() {
  return /** @type{?proto.Protos.Unit} */ (
    jspb.Message.getWrapperField(this, proto.Protos.Unit, 5));
};


/** @param {?proto.Protos.Unit|undefined} value */
proto.Protos.GuildMember.prototype.setLeaderUnit = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.Protos.GuildMember.prototype.clearLeaderUnit = function() {
  this.setLeaderUnit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasLeaderUnit = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional int64 contribution = 6;
 * @return {number}
 */
proto.Protos.GuildMember.prototype.getContribution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Protos.GuildMember.prototype.setContribution = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.Protos.GuildMember.prototype.clearContribution = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasContribution = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional int32 guild_xp = 7;
 * @return {number}
 */
proto.Protos.GuildMember.prototype.getGuildXp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.Protos.GuildMember.prototype.setGuildXp = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.Protos.GuildMember.prototype.clearGuildXp = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasGuildXp = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 last_activity_time = 8;
 * @return {number}
 */
proto.Protos.GuildMember.prototype.getLastActivityTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.Protos.GuildMember.prototype.setLastActivityTime = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.Protos.GuildMember.prototype.clearLastActivityTime = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasLastActivityTime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 squad_power = 9;
 * @return {number}
 */
proto.Protos.GuildMember.prototype.getSquadPower = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.Protos.GuildMember.prototype.setSquadPower = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.Protos.GuildMember.prototype.clearSquadPower = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasSquadPower = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int64 lifetime_contribution = 10;
 * @return {number}
 */
proto.Protos.GuildMember.prototype.getLifetimeContribution = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.Protos.GuildMember.prototype.setLifetimeContribution = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.Protos.GuildMember.prototype.clearLifetimeContribution = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMember.prototype.hasLifetimeContribution = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * repeated GuildMemberContribution member_contribution = 11;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildMemberContribution>}
 */
proto.Protos.GuildMember.prototype.getMemberContributionList = function() {
  return /** @type{!Array.<!proto.Protos.GuildMemberContribution>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildMemberContribution, 11));
};


/** @param {!Array.<!proto.Protos.GuildMemberContribution>} value */
proto.Protos.GuildMember.prototype.setMemberContributionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.Protos.GuildMemberContribution=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildMemberContribution}
 */
proto.Protos.GuildMember.prototype.addMemberContribution = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.Protos.GuildMemberContribution, opt_index);
};


proto.Protos.GuildMember.prototype.clearMemberContributionList = function() {
  this.setMemberContributionList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildMemberContribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.GuildMemberContribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildMemberContribution.displayName = 'proto.Protos.GuildMemberContribution';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildMemberContribution.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildMemberContribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildMemberContribution} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildMemberContribution.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 1),
    currentValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    lifetimeValue: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildMemberContribution}
 */
proto.Protos.GuildMemberContribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildMemberContribution;
  return proto.Protos.GuildMemberContribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildMemberContribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildMemberContribution}
 */
proto.Protos.GuildMemberContribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.Protos.MemberContributionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCurrentValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLifetimeValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildMemberContribution} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildMemberContribution.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildMemberContribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildMemberContribution.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {!proto.Protos.MemberContributionType} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional MemberContributionType type = 1;
 * @return {!proto.Protos.MemberContributionType}
 */
proto.Protos.GuildMemberContribution.prototype.getType = function() {
  return /** @type {!proto.Protos.MemberContributionType} */ (jspb.Message.getFieldWithDefault(this, 1, 1));
};


/** @param {!proto.Protos.MemberContributionType} value */
proto.Protos.GuildMemberContribution.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.GuildMemberContribution.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMemberContribution.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 current_value = 2;
 * @return {number}
 */
proto.Protos.GuildMemberContribution.prototype.getCurrentValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.GuildMemberContribution.prototype.setCurrentValue = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.GuildMemberContribution.prototype.clearCurrentValue = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMemberContribution.prototype.hasCurrentValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 lifetime_value = 3;
 * @return {number}
 */
proto.Protos.GuildMemberContribution.prototype.getLifetimeValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Protos.GuildMemberContribution.prototype.setLifetimeValue = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.GuildMemberContribution.prototype.clearLifetimeValue = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildMemberContribution.prototype.hasLifetimeValue = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.GuildProfile.repeatedFields_, null);
};
goog.inherits(proto.Protos.GuildProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildProfile.displayName = 'proto.Protos.GuildProfile';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.GuildProfile.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildProfile} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    externalMessageKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    messageCriteriaKeyList: jspb.Message.getField(msg, 4),
    logo: jspb.Message.getFieldWithDefault(msg, 5, ""),
    logoBackground: jspb.Message.getFieldWithDefault(msg, 6, ""),
    enrollmentStatus: jspb.Message.getFieldWithDefault(msg, 7, 2),
    trophy: jspb.Message.getFieldWithDefault(msg, 8, 0),
    memberCount: jspb.Message.getFieldWithDefault(msg, 9, 0),
    memberMax: jspb.Message.getFieldWithDefault(msg, 10, 0),
    level: jspb.Message.getFieldWithDefault(msg, 11, 0),
    rank: jspb.Message.getFieldWithDefault(msg, 12, 0),
    levelRequirement: jspb.Message.getFieldWithDefault(msg, 13, 0),
    raidWin: jspb.Message.getFieldWithDefault(msg, 14, 0),
    leaderboardScore: jspb.Message.getFieldWithDefault(msg, 15, 0),
    bannerColorId: jspb.Message.getFieldWithDefault(msg, 16, ""),
    bannerLogoId: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildProfile}
 */
proto.Protos.GuildProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildProfile;
  return proto.Protos.GuildProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildProfile}
 */
proto.Protos.GuildProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExternalMessageKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMessageCriteriaKey(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogoBackground(value);
      break;
    case 7:
      var value = /** @type {!proto.Protos.EnrollmentStatus} */ (reader.readEnum());
      msg.setEnrollmentStatus(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTrophy(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemberCount(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemberMax(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRank(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevelRequirement(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRaidWin(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLeaderboardScore(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setBannerColorId(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setBannerLogoId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildProfile} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildProfile.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildProfile.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getMessageCriteriaKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {!proto.Protos.EnrollmentStatus} */ (jspb.Message.getField(this, 7));
  if (f != null) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 8));
  if (f != null) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 11));
  if (f != null) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 12));
  if (f != null) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 13));
  if (f != null) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 14));
  if (f != null) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 15));
  if (f != null) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Protos.GuildProfile.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.GuildProfile.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.GuildProfile.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.Protos.GuildProfile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Protos.GuildProfile.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.GuildProfile.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string external_message_key = 3;
 * @return {string}
 */
proto.Protos.GuildProfile.prototype.getExternalMessageKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.Protos.GuildProfile.prototype.setExternalMessageKey = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.GuildProfile.prototype.clearExternalMessageKey = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasExternalMessageKey = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated string message_criteria_key = 4;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.Protos.GuildProfile.prototype.getMessageCriteriaKeyList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 4));
};


/** @param {!Array.<string>} value */
proto.Protos.GuildProfile.prototype.setMessageCriteriaKeyList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.Protos.GuildProfile.prototype.addMessageCriteriaKey = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.Protos.GuildProfile.prototype.clearMessageCriteriaKeyList = function() {
  this.setMessageCriteriaKeyList([]);
};


/**
 * optional string logo = 5;
 * @return {string}
 */
proto.Protos.GuildProfile.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.Protos.GuildProfile.prototype.setLogo = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Protos.GuildProfile.prototype.clearLogo = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasLogo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string logo_background = 6;
 * @return {string}
 */
proto.Protos.GuildProfile.prototype.getLogoBackground = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.Protos.GuildProfile.prototype.setLogoBackground = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.Protos.GuildProfile.prototype.clearLogoBackground = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasLogoBackground = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional EnrollmentStatus enrollment_status = 7;
 * @return {!proto.Protos.EnrollmentStatus}
 */
proto.Protos.GuildProfile.prototype.getEnrollmentStatus = function() {
  return /** @type {!proto.Protos.EnrollmentStatus} */ (jspb.Message.getFieldWithDefault(this, 7, 2));
};


/** @param {!proto.Protos.EnrollmentStatus} value */
proto.Protos.GuildProfile.prototype.setEnrollmentStatus = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.Protos.GuildProfile.prototype.clearEnrollmentStatus = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasEnrollmentStatus = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int32 trophy = 8;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getTrophy = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setTrophy = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.Protos.GuildProfile.prototype.clearTrophy = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasTrophy = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 member_count = 9;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getMemberCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setMemberCount = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.Protos.GuildProfile.prototype.clearMemberCount = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasMemberCount = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 member_max = 10;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getMemberMax = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setMemberMax = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.Protos.GuildProfile.prototype.clearMemberMax = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasMemberMax = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional int32 level = 11;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.Protos.GuildProfile.prototype.clearLevel = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int32 rank = 12;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setRank = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.Protos.GuildProfile.prototype.clearRank = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasRank = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int32 level_requirement = 13;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getLevelRequirement = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setLevelRequirement = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.Protos.GuildProfile.prototype.clearLevelRequirement = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasLevelRequirement = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int32 raid_win = 14;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getRaidWin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setRaidWin = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.Protos.GuildProfile.prototype.clearRaidWin = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasRaidWin = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int64 leaderboard_score = 15;
 * @return {number}
 */
proto.Protos.GuildProfile.prototype.getLeaderboardScore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.Protos.GuildProfile.prototype.setLeaderboardScore = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.Protos.GuildProfile.prototype.clearLeaderboardScore = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasLeaderboardScore = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string banner_color_id = 16;
 * @return {string}
 */
proto.Protos.GuildProfile.prototype.getBannerColorId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.Protos.GuildProfile.prototype.setBannerColorId = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.Protos.GuildProfile.prototype.clearBannerColorId = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasBannerColorId = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string banner_logo_id = 17;
 * @return {string}
 */
proto.Protos.GuildProfile.prototype.getBannerLogoId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.Protos.GuildProfile.prototype.setBannerLogoId = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.Protos.GuildProfile.prototype.clearBannerLogoId = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildProfile.prototype.hasBannerLogoId = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildProgress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.GuildProgress.repeatedFields_, null);
};
goog.inherits(proto.Protos.GuildProgress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildProgress.displayName = 'proto.Protos.GuildProgress';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.GuildProgress.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildProgress.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildProgress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildProgress} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildProgress.toObject = function(includeInstance, msg) {
  var f, obj = {
    raidProgressList: jspb.Message.toObjectList(msg.getRaidProgressList(),
    proto.Protos.GuildRaidProgress.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildProgress}
 */
proto.Protos.GuildProgress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildProgress;
  return proto.Protos.GuildProgress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildProgress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildProgress}
 */
proto.Protos.GuildProgress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Protos.GuildRaidProgress;
      reader.readMessage(value,proto.Protos.GuildRaidProgress.deserializeBinaryFromReader);
      msg.addRaidProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildProgress} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildProgress.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildProgress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildProgress.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getRaidProgressList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.Protos.GuildRaidProgress.serializeBinaryToWriter
    );
  }
};


/**
 * repeated GuildRaidProgress raid_progress = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildRaidProgress>}
 */
proto.Protos.GuildProgress.prototype.getRaidProgressList = function() {
  return /** @type{!Array.<!proto.Protos.GuildRaidProgress>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildRaidProgress, 1));
};


/** @param {!Array.<!proto.Protos.GuildRaidProgress>} value */
proto.Protos.GuildProgress.prototype.setRaidProgressList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.Protos.GuildRaidProgress=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildRaidProgress}
 */
proto.Protos.GuildProgress.prototype.addRaidProgress = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.Protos.GuildRaidProgress, opt_index);
};


proto.Protos.GuildProgress.prototype.clearRaidProgressList = function() {
  this.setRaidProgressList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildRaidMember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.GuildRaidMember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildRaidMember.displayName = 'proto.Protos.GuildRaidMember';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildRaidMember.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildRaidMember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildRaidMember} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildRaidMember.toObject = function(includeInstance, msg) {
  var f, obj = {
    playerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    memberProgress: jspb.Message.getFieldWithDefault(msg, 2, 0),
    memberRank: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildRaidMember}
 */
proto.Protos.GuildRaidMember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildRaidMember;
  return proto.Protos.GuildRaidMember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildRaidMember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildRaidMember}
 */
proto.Protos.GuildRaidMember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlayerId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemberProgress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemberRank(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildRaidMember} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidMember.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildRaidMember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidMember.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string player_id = 1;
 * @return {string}
 */
proto.Protos.GuildRaidMember.prototype.getPlayerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.GuildRaidMember.prototype.setPlayerId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.GuildRaidMember.prototype.clearPlayerId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidMember.prototype.hasPlayerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 member_progress = 2;
 * @return {number}
 */
proto.Protos.GuildRaidMember.prototype.getMemberProgress = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidMember.prototype.setMemberProgress = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.GuildRaidMember.prototype.clearMemberProgress = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidMember.prototype.hasMemberProgress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 member_rank = 3;
 * @return {number}
 */
proto.Protos.GuildRaidMember.prototype.getMemberRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidMember.prototype.setMemberRank = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.GuildRaidMember.prototype.clearMemberRank = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidMember.prototype.hasMemberRank = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildRaidProgress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.GuildRaidProgress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildRaidProgress.displayName = 'proto.Protos.GuildRaidProgress';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildRaidProgress.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildRaidProgress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildRaidProgress} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildRaidProgress.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && proto.Protos.CampaignElementIdentifier.toObject(includeInstance, f),
    progress: jspb.Message.getFieldWithDefault(msg, 2, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildRaidProgress}
 */
proto.Protos.GuildRaidProgress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildRaidProgress;
  return proto.Protos.GuildRaidProgress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildRaidProgress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildRaidProgress}
 */
proto.Protos.GuildRaidProgress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.Protos.CampaignElementIdentifier;
      reader.readMessage(value,proto.Protos.CampaignElementIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {!proto.Protos.CampaignElementProgress} */ (reader.readEnum());
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildRaidProgress} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidProgress.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildRaidProgress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidProgress.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.Protos.CampaignElementIdentifier.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.Protos.CampaignElementProgress} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional CampaignElementIdentifier identifier = 1;
 * @return {?proto.Protos.CampaignElementIdentifier}
 */
proto.Protos.GuildRaidProgress.prototype.getIdentifier = function() {
  return /** @type{?proto.Protos.CampaignElementIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.Protos.CampaignElementIdentifier, 1));
};


/** @param {?proto.Protos.CampaignElementIdentifier|undefined} value */
proto.Protos.GuildRaidProgress.prototype.setIdentifier = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.Protos.GuildRaidProgress.prototype.clearIdentifier = function() {
  this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidProgress.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CampaignElementProgress progress = 2;
 * @return {!proto.Protos.CampaignElementProgress}
 */
proto.Protos.GuildRaidProgress.prototype.getProgress = function() {
  return /** @type {!proto.Protos.CampaignElementProgress} */ (jspb.Message.getFieldWithDefault(this, 2, 1));
};


/** @param {!proto.Protos.CampaignElementProgress} value */
proto.Protos.GuildRaidProgress.prototype.setProgress = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.GuildRaidProgress.prototype.clearProgress = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidProgress.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildRaidResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.GuildRaidResult.repeatedFields_, null);
};
goog.inherits(proto.Protos.GuildRaidResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildRaidResult.displayName = 'proto.Protos.GuildRaidResult';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.GuildRaidResult.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildRaidResult.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildRaidResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildRaidResult} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildRaidResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    raidId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    raidMemberList: jspb.Message.toObjectList(msg.getRaidMemberList(),
    proto.Protos.GuildRaidMember.toObject, includeInstance),
    identifier: (f = msg.getIdentifier()) && proto.Protos.CampaignElementIdentifier.toObject(includeInstance, f),
    duration: jspb.Message.getFieldWithDefault(msg, 4, 0),
    progressDeprecated: jspb.Message.getFieldWithDefault(msg, 5, 0),
    progress: +jspb.Message.getFieldWithDefault(msg, 6, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildRaidResult}
 */
proto.Protos.GuildRaidResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildRaidResult;
  return proto.Protos.GuildRaidResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildRaidResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildRaidResult}
 */
proto.Protos.GuildRaidResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRaidId(value);
      break;
    case 2:
      var value = new proto.Protos.GuildRaidMember;
      reader.readMessage(value,proto.Protos.GuildRaidMember.deserializeBinaryFromReader);
      msg.addRaidMember(value);
      break;
    case 3:
      var value = new proto.Protos.CampaignElementIdentifier;
      reader.readMessage(value,proto.Protos.CampaignElementIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setProgressDeprecated(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setProgress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildRaidResult} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidResult.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildRaidResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidResult.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getRaidMemberList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.Protos.GuildRaidMember.serializeBinaryToWriter
    );
  }
  f = this.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.Protos.CampaignElementIdentifier.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
};


/**
 * optional string raid_id = 1;
 * @return {string}
 */
proto.Protos.GuildRaidResult.prototype.getRaidId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.GuildRaidResult.prototype.setRaidId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.GuildRaidResult.prototype.clearRaidId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidResult.prototype.hasRaidId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated GuildRaidMember raid_member = 2;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildRaidMember>}
 */
proto.Protos.GuildRaidResult.prototype.getRaidMemberList = function() {
  return /** @type{!Array.<!proto.Protos.GuildRaidMember>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildRaidMember, 2));
};


/** @param {!Array.<!proto.Protos.GuildRaidMember>} value */
proto.Protos.GuildRaidResult.prototype.setRaidMemberList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Protos.GuildRaidMember=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildRaidMember}
 */
proto.Protos.GuildRaidResult.prototype.addRaidMember = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Protos.GuildRaidMember, opt_index);
};


proto.Protos.GuildRaidResult.prototype.clearRaidMemberList = function() {
  this.setRaidMemberList([]);
};


/**
 * optional CampaignElementIdentifier identifier = 3;
 * @return {?proto.Protos.CampaignElementIdentifier}
 */
proto.Protos.GuildRaidResult.prototype.getIdentifier = function() {
  return /** @type{?proto.Protos.CampaignElementIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.Protos.CampaignElementIdentifier, 3));
};


/** @param {?proto.Protos.CampaignElementIdentifier|undefined} value */
proto.Protos.GuildRaidResult.prototype.setIdentifier = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.Protos.GuildRaidResult.prototype.clearIdentifier = function() {
  this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidResult.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 duration = 4;
 * @return {number}
 */
proto.Protos.GuildRaidResult.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidResult.prototype.setDuration = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Protos.GuildRaidResult.prototype.clearDuration = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidResult.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 progress_deprecated = 5;
 * @return {number}
 */
proto.Protos.GuildRaidResult.prototype.getProgressDeprecated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidResult.prototype.setProgressDeprecated = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Protos.GuildRaidResult.prototype.clearProgressDeprecated = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidResult.prototype.hasProgressDeprecated = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float progress = 6;
 * @return {number}
 */
proto.Protos.GuildRaidResult.prototype.getProgress = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.Protos.GuildRaidResult.prototype.setProgress = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.Protos.GuildRaidResult.prototype.clearProgress = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidResult.prototype.hasProgress = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.GuildRaidStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.GuildRaidStatus.repeatedFields_, null);
};
goog.inherits(proto.Protos.GuildRaidStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.GuildRaidStatus.displayName = 'proto.Protos.GuildRaidStatus';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.GuildRaidStatus.repeatedFields_ = [5,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.GuildRaidStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.GuildRaidStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.GuildRaidStatus} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.GuildRaidStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    raidId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expireTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    raidProgress: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    raidMemberList: jspb.Message.toObjectList(msg.getRaidMemberList(),
    proto.Protos.GuildRaidMember.toObject, includeInstance),
    encounterIndex: jspb.Message.getFieldWithDefault(msg, 6, 0),
    opponentUnitStateList: jspb.Message.toObjectList(msg.getOpponentUnitStateList(),
    proto.Protos.BattleUnitState.toObject, includeInstance),
    playerUnitStateList: jspb.Message.toObjectList(msg.getPlayerUnitStateList(),
    proto.Protos.BattleUnitState.toObject, includeInstance),
    identifier: (f = msg.getIdentifier()) && proto.Protos.CampaignElementIdentifier.toObject(includeInstance, f),
    instanceId: jspb.Message.getFieldWithDefault(msg, 11, ""),
    rosterRefreshTime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    hasPlayerParticipated: jspb.Message.getFieldWithDefault(msg, 15, false),
    lastEncounterIndexPlayerParticipated: jspb.Message.getFieldWithDefault(msg, 16, 0),
    raidState: jspb.Message.getFieldWithDefault(msg, 17, 1),
    tallyEndTime: jspb.Message.getFieldWithDefault(msg, 18, 0),
    eligibleForRewards: jspb.Message.getFieldWithDefault(msg, 19, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.GuildRaidStatus}
 */
proto.Protos.GuildRaidStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.GuildRaidStatus;
  return proto.Protos.GuildRaidStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.GuildRaidStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.GuildRaidStatus}
 */
proto.Protos.GuildRaidStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRaidId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setExpireTime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRaidProgress(value);
      break;
    case 5:
      var value = new proto.Protos.GuildRaidMember;
      reader.readMessage(value,proto.Protos.GuildRaidMember.deserializeBinaryFromReader);
      msg.addRaidMember(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEncounterIndex(value);
      break;
    case 8:
      var value = new proto.Protos.BattleUnitState;
      reader.readMessage(value,proto.Protos.BattleUnitState.deserializeBinaryFromReader);
      msg.addOpponentUnitState(value);
      break;
    case 9:
      var value = new proto.Protos.BattleUnitState;
      reader.readMessage(value,proto.Protos.BattleUnitState.deserializeBinaryFromReader);
      msg.addPlayerUnitState(value);
      break;
    case 10:
      var value = new proto.Protos.CampaignElementIdentifier;
      reader.readMessage(value,proto.Protos.CampaignElementIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstanceId(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRosterRefreshTime(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHasPlayerParticipated(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLastEncounterIndexPlayerParticipated(value);
      break;
    case 17:
      var value = /** @type {!proto.Protos.RaidState} */ (reader.readEnum());
      msg.setRaidState(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTallyEndTime(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEligibleForRewards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.GuildRaidStatus} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidStatus.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.GuildRaidStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.GuildRaidStatus.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = this.getRaidMemberList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.Protos.GuildRaidMember.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 6));
  if (f != null) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = this.getOpponentUnitStateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.Protos.BattleUnitState.serializeBinaryToWriter
    );
  }
  f = this.getPlayerUnitStateList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.Protos.BattleUnitState.serializeBinaryToWriter
    );
  }
  f = this.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.Protos.CampaignElementIdentifier.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 15));
  if (f != null) {
    writer.writeBool(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = /** @type {!proto.Protos.RaidState} */ (jspb.Message.getField(this, 17));
  if (f != null) {
    writer.writeEnum(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 18));
  if (f != null) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 19));
  if (f != null) {
    writer.writeBool(
      19,
      f
    );
  }
};


/**
 * optional string raid_id = 1;
 * @return {string}
 */
proto.Protos.GuildRaidStatus.prototype.getRaidId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.GuildRaidStatus.prototype.setRaidId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.GuildRaidStatus.prototype.clearRaidId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasRaidId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 expire_time = 2;
 * @return {number}
 */
proto.Protos.GuildRaidStatus.prototype.getExpireTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidStatus.prototype.setExpireTime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.GuildRaidStatus.prototype.clearExpireTime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasExpireTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float raid_progress = 3;
 * @return {number}
 */
proto.Protos.GuildRaidStatus.prototype.getRaidProgress = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.Protos.GuildRaidStatus.prototype.setRaidProgress = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.GuildRaidStatus.prototype.clearRaidProgress = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasRaidProgress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated GuildRaidMember raid_member = 5;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.GuildRaidMember>}
 */
proto.Protos.GuildRaidStatus.prototype.getRaidMemberList = function() {
  return /** @type{!Array.<!proto.Protos.GuildRaidMember>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.GuildRaidMember, 5));
};


/** @param {!Array.<!proto.Protos.GuildRaidMember>} value */
proto.Protos.GuildRaidStatus.prototype.setRaidMemberList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.Protos.GuildRaidMember=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.GuildRaidMember}
 */
proto.Protos.GuildRaidStatus.prototype.addRaidMember = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.Protos.GuildRaidMember, opt_index);
};


proto.Protos.GuildRaidStatus.prototype.clearRaidMemberList = function() {
  this.setRaidMemberList([]);
};


/**
 * optional int32 encounter_index = 6;
 * @return {number}
 */
proto.Protos.GuildRaidStatus.prototype.getEncounterIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidStatus.prototype.setEncounterIndex = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.Protos.GuildRaidStatus.prototype.clearEncounterIndex = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasEncounterIndex = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated BattleUnitState opponent_unit_state = 8;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.BattleUnitState>}
 */
proto.Protos.GuildRaidStatus.prototype.getOpponentUnitStateList = function() {
  return /** @type{!Array.<!proto.Protos.BattleUnitState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.BattleUnitState, 8));
};


/** @param {!Array.<!proto.Protos.BattleUnitState>} value */
proto.Protos.GuildRaidStatus.prototype.setOpponentUnitStateList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.Protos.BattleUnitState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.BattleUnitState}
 */
proto.Protos.GuildRaidStatus.prototype.addOpponentUnitState = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.Protos.BattleUnitState, opt_index);
};


proto.Protos.GuildRaidStatus.prototype.clearOpponentUnitStateList = function() {
  this.setOpponentUnitStateList([]);
};


/**
 * repeated BattleUnitState player_unit_state = 9;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.BattleUnitState>}
 */
proto.Protos.GuildRaidStatus.prototype.getPlayerUnitStateList = function() {
  return /** @type{!Array.<!proto.Protos.BattleUnitState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.BattleUnitState, 9));
};


/** @param {!Array.<!proto.Protos.BattleUnitState>} value */
proto.Protos.GuildRaidStatus.prototype.setPlayerUnitStateList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.Protos.BattleUnitState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.BattleUnitState}
 */
proto.Protos.GuildRaidStatus.prototype.addPlayerUnitState = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.Protos.BattleUnitState, opt_index);
};


proto.Protos.GuildRaidStatus.prototype.clearPlayerUnitStateList = function() {
  this.setPlayerUnitStateList([]);
};


/**
 * optional CampaignElementIdentifier identifier = 10;
 * @return {?proto.Protos.CampaignElementIdentifier}
 */
proto.Protos.GuildRaidStatus.prototype.getIdentifier = function() {
  return /** @type{?proto.Protos.CampaignElementIdentifier} */ (
    jspb.Message.getWrapperField(this, proto.Protos.CampaignElementIdentifier, 10));
};


/** @param {?proto.Protos.CampaignElementIdentifier|undefined} value */
proto.Protos.GuildRaidStatus.prototype.setIdentifier = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.Protos.GuildRaidStatus.prototype.clearIdentifier = function() {
  this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string instance_id = 11;
 * @return {string}
 */
proto.Protos.GuildRaidStatus.prototype.getInstanceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.Protos.GuildRaidStatus.prototype.setInstanceId = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.Protos.GuildRaidStatus.prototype.clearInstanceId = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasInstanceId = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional int64 roster_refresh_time = 14;
 * @return {number}
 */
proto.Protos.GuildRaidStatus.prototype.getRosterRefreshTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidStatus.prototype.setRosterRefreshTime = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.Protos.GuildRaidStatus.prototype.clearRosterRefreshTime = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasRosterRefreshTime = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional bool has_player_participated = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Protos.GuildRaidStatus.prototype.getHasPlayerParticipated = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.Protos.GuildRaidStatus.prototype.setHasPlayerParticipated = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.Protos.GuildRaidStatus.prototype.clearHasPlayerParticipated = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasHasPlayerParticipated = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 last_encounter_index_player_participated = 16;
 * @return {number}
 */
proto.Protos.GuildRaidStatus.prototype.getLastEncounterIndexPlayerParticipated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidStatus.prototype.setLastEncounterIndexPlayerParticipated = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.Protos.GuildRaidStatus.prototype.clearLastEncounterIndexPlayerParticipated = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasLastEncounterIndexPlayerParticipated = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional RaidState raid_state = 17;
 * @return {!proto.Protos.RaidState}
 */
proto.Protos.GuildRaidStatus.prototype.getRaidState = function() {
  return /** @type {!proto.Protos.RaidState} */ (jspb.Message.getFieldWithDefault(this, 17, 1));
};


/** @param {!proto.Protos.RaidState} value */
proto.Protos.GuildRaidStatus.prototype.setRaidState = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.Protos.GuildRaidStatus.prototype.clearRaidState = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasRaidState = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int64 tally_end_time = 18;
 * @return {number}
 */
proto.Protos.GuildRaidStatus.prototype.getTallyEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.Protos.GuildRaidStatus.prototype.setTallyEndTime = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.Protos.GuildRaidStatus.prototype.clearTallyEndTime = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasTallyEndTime = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool eligible_for_rewards = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Protos.GuildRaidStatus.prototype.getEligibleForRewards = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.Protos.GuildRaidStatus.prototype.setEligibleForRewards = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.Protos.GuildRaidStatus.prototype.clearEligibleForRewards = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.GuildRaidStatus.prototype.hasEligibleForRewards = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.Skill = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.Skill, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.Skill.displayName = 'proto.Protos.Skill';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.Skill.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.Skill.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.Skill} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.Skill.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tier: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.Skill}
 */
proto.Protos.Skill.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.Skill;
  return proto.Protos.Skill.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.Skill} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.Skill}
 */
proto.Protos.Skill.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.Skill} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Skill.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.Skill.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Skill.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Protos.Skill.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.Skill.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.Skill.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Skill.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 tier = 2;
 * @return {number}
 */
proto.Protos.Skill.prototype.getTier = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.Protos.Skill.prototype.setTier = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.Skill.prototype.clearTier = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Skill.prototype.hasTier = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.Stat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.Protos.Stat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.Stat.displayName = 'proto.Protos.Stat';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.Stat.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.Stat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.Stat} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.Stat.toObject = function(includeInstance, msg) {
  var f, obj = {
    statId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    unitStatId: jspb.Message.getFieldWithDefault(msg, 3, 1),
    statValueDecimalOld: jspb.Message.getFieldWithDefault(msg, 4, 0),
    statValueDecimal: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.Stat}
 */
proto.Protos.Stat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.Stat;
  return proto.Protos.Stat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.Stat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.Stat}
 */
proto.Protos.Stat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatId(value);
      break;
    case 3:
      var value = /** @type {!proto.Protos.UnitStat} */ (reader.readEnum());
      msg.setUnitStatId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatValueDecimalOld(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatValueDecimal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.Stat} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Stat.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.Stat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Stat.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {!proto.Protos.UnitStat} */ (jspb.Message.getField(this, 3));
  if (f != null) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string stat_id = 1;
 * @return {string}
 */
proto.Protos.Stat.prototype.getStatId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.Stat.prototype.setStatId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.Stat.prototype.clearStatId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Stat.prototype.hasStatId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional UnitStat unit_stat_id = 3;
 * @return {!proto.Protos.UnitStat}
 */
proto.Protos.Stat.prototype.getUnitStatId = function() {
  return /** @type {!proto.Protos.UnitStat} */ (jspb.Message.getFieldWithDefault(this, 3, 1));
};


/** @param {!proto.Protos.UnitStat} value */
proto.Protos.Stat.prototype.setUnitStatId = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.Protos.Stat.prototype.clearUnitStatId = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Stat.prototype.hasUnitStatId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 stat_value_decimal_old = 4;
 * @return {number}
 */
proto.Protos.Stat.prototype.getStatValueDecimalOld = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Protos.Stat.prototype.setStatValueDecimalOld = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Protos.Stat.prototype.clearStatValueDecimalOld = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Stat.prototype.hasStatValueDecimalOld = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 stat_value_decimal = 5;
 * @return {number}
 */
proto.Protos.Stat.prototype.getStatValueDecimal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.Protos.Stat.prototype.setStatValueDecimal = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Protos.Stat.prototype.clearStatValueDecimal = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Stat.prototype.hasStatValueDecimal = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.StatDef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.StatDef.repeatedFields_, null);
};
goog.inherits(proto.Protos.StatDef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.StatDef.displayName = 'proto.Protos.StatDef';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.StatDef.repeatedFields_ = [19];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.StatDef.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.StatDef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.StatDef} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.StatDef.toObject = function(includeInstance, msg) {
  var f, obj = {
    statList: jspb.Message.toObjectList(msg.getStatList(),
    proto.Protos.Stat.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.StatDef}
 */
proto.Protos.StatDef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.StatDef;
  return proto.Protos.StatDef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.StatDef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.StatDef}
 */
proto.Protos.StatDef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 19:
      var value = new proto.Protos.Stat;
      reader.readMessage(value,proto.Protos.Stat.deserializeBinaryFromReader);
      msg.addStat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.StatDef} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.StatDef.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.StatDef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.StatDef.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getStatList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      19,
      f,
      proto.Protos.Stat.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Stat stat = 19;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.Stat>}
 */
proto.Protos.StatDef.prototype.getStatList = function() {
  return /** @type{!Array.<!proto.Protos.Stat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.Stat, 19));
};


/** @param {!Array.<!proto.Protos.Stat>} value */
proto.Protos.StatDef.prototype.setStatList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 19, value);
};


/**
 * @param {!proto.Protos.Stat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.Stat}
 */
proto.Protos.StatDef.prototype.addStat = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 19, opt_value, proto.Protos.Stat, opt_index);
};


proto.Protos.StatDef.prototype.clearStatList = function() {
  this.setStatList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.StatMod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.StatMod.repeatedFields_, null);
};
goog.inherits(proto.Protos.StatMod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.StatMod.displayName = 'proto.Protos.StatMod';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.StatMod.repeatedFields_ = [13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.StatMod.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.StatMod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.StatMod} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.StatMod.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    definitionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    level: jspb.Message.getFieldWithDefault(msg, 4, 0),
    tier: jspb.Message.getFieldWithDefault(msg, 5, 1),
    sellValue: (f = msg.getSellValue()) && proto.Protos.CurrencyItem.toObject(includeInstance, f),
    removeCost: (f = msg.getRemoveCost()) && proto.Protos.CurrencyItem.toObject(includeInstance, f),
    locked: jspb.Message.getFieldWithDefault(msg, 11, false),
    primaryStat: (f = msg.getPrimaryStat()) && proto.Protos.StatModStat.toObject(includeInstance, f),
    secondaryStatList: jspb.Message.toObjectList(msg.getSecondaryStatList(),
    proto.Protos.StatModStat.toObject, includeInstance),
    xp: jspb.Message.getFieldWithDefault(msg, 14, 0),
    levelCost: (f = msg.getLevelCost()) && proto.Protos.CurrencyItem.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.StatMod}
 */
proto.Protos.StatMod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.StatMod;
  return proto.Protos.StatMod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.StatMod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.StatMod}
 */
proto.Protos.StatMod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefinitionId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 5:
      var value = /** @type {!proto.Protos.StatModTier} */ (reader.readEnum());
      msg.setTier(value);
      break;
    case 9:
      var value = new proto.Protos.CurrencyItem;
      reader.readMessage(value,proto.Protos.CurrencyItem.deserializeBinaryFromReader);
      msg.setSellValue(value);
      break;
    case 10:
      var value = new proto.Protos.CurrencyItem;
      reader.readMessage(value,proto.Protos.CurrencyItem.deserializeBinaryFromReader);
      msg.setRemoveCost(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLocked(value);
      break;
    case 12:
      var value = new proto.Protos.StatModStat;
      reader.readMessage(value,proto.Protos.StatModStat.deserializeBinaryFromReader);
      msg.setPrimaryStat(value);
      break;
    case 13:
      var value = new proto.Protos.StatModStat;
      reader.readMessage(value,proto.Protos.StatModStat.deserializeBinaryFromReader);
      msg.addSecondaryStat(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setXp(value);
      break;
    case 15:
      var value = new proto.Protos.CurrencyItem;
      reader.readMessage(value,proto.Protos.CurrencyItem.deserializeBinaryFromReader);
      msg.setLevelCost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.StatMod} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.StatMod.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.StatMod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.StatMod.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 4));
  if (f != null) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {!proto.Protos.StatModTier} */ (jspb.Message.getField(this, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = this.getSellValue();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.Protos.CurrencyItem.serializeBinaryToWriter
    );
  }
  f = this.getRemoveCost();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.Protos.CurrencyItem.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(this, 11));
  if (f != null) {
    writer.writeBool(
      11,
      f
    );
  }
  f = this.getPrimaryStat();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.Protos.StatModStat.serializeBinaryToWriter
    );
  }
  f = this.getSecondaryStatList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.Protos.StatModStat.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 14));
  if (f != null) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = this.getLevelCost();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.Protos.CurrencyItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Protos.StatMod.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.StatMod.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.StatMod.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string definition_id = 2;
 * @return {string}
 */
proto.Protos.StatMod.prototype.getDefinitionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Protos.StatMod.prototype.setDefinitionId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.StatMod.prototype.clearDefinitionId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasDefinitionId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int32 level = 4;
 * @return {number}
 */
proto.Protos.StatMod.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.Protos.StatMod.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.Protos.StatMod.prototype.clearLevel = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional StatModTier tier = 5;
 * @return {!proto.Protos.StatModTier}
 */
proto.Protos.StatMod.prototype.getTier = function() {
  return /** @type {!proto.Protos.StatModTier} */ (jspb.Message.getFieldWithDefault(this, 5, 1));
};


/** @param {!proto.Protos.StatModTier} value */
proto.Protos.StatMod.prototype.setTier = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.Protos.StatMod.prototype.clearTier = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasTier = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CurrencyItem sell_value = 9;
 * @return {?proto.Protos.CurrencyItem}
 */
proto.Protos.StatMod.prototype.getSellValue = function() {
  return /** @type{?proto.Protos.CurrencyItem} */ (
    jspb.Message.getWrapperField(this, proto.Protos.CurrencyItem, 9));
};


/** @param {?proto.Protos.CurrencyItem|undefined} value */
proto.Protos.StatMod.prototype.setSellValue = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.Protos.StatMod.prototype.clearSellValue = function() {
  this.setSellValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasSellValue = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional CurrencyItem remove_cost = 10;
 * @return {?proto.Protos.CurrencyItem}
 */
proto.Protos.StatMod.prototype.getRemoveCost = function() {
  return /** @type{?proto.Protos.CurrencyItem} */ (
    jspb.Message.getWrapperField(this, proto.Protos.CurrencyItem, 10));
};


/** @param {?proto.Protos.CurrencyItem|undefined} value */
proto.Protos.StatMod.prototype.setRemoveCost = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.Protos.StatMod.prototype.clearRemoveCost = function() {
  this.setRemoveCost(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasRemoveCost = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool locked = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.Protos.StatMod.prototype.getLocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.Protos.StatMod.prototype.setLocked = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.Protos.StatMod.prototype.clearLocked = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasLocked = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional StatModStat primary_stat = 12;
 * @return {?proto.Protos.StatModStat}
 */
proto.Protos.StatMod.prototype.getPrimaryStat = function() {
  return /** @type{?proto.Protos.StatModStat} */ (
    jspb.Message.getWrapperField(this, proto.Protos.StatModStat, 12));
};


/** @param {?proto.Protos.StatModStat|undefined} value */
proto.Protos.StatMod.prototype.setPrimaryStat = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.Protos.StatMod.prototype.clearPrimaryStat = function() {
  this.setPrimaryStat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasPrimaryStat = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated StatModStat secondary_stat = 13;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.StatModStat>}
 */
proto.Protos.StatMod.prototype.getSecondaryStatList = function() {
  return /** @type{!Array.<!proto.Protos.StatModStat>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.StatModStat, 13));
};


/** @param {!Array.<!proto.Protos.StatModStat>} value */
proto.Protos.StatMod.prototype.setSecondaryStatList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.Protos.StatModStat=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.StatModStat}
 */
proto.Protos.StatMod.prototype.addSecondaryStat = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.Protos.StatModStat, opt_index);
};


proto.Protos.StatMod.prototype.clearSecondaryStatList = function() {
  this.setSecondaryStatList([]);
};


/**
 * optional int32 xp = 14;
 * @return {number}
 */
proto.Protos.StatMod.prototype.getXp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.Protos.StatMod.prototype.setXp = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.Protos.StatMod.prototype.clearXp = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasXp = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional CurrencyItem level_cost = 15;
 * @return {?proto.Protos.CurrencyItem}
 */
proto.Protos.StatMod.prototype.getLevelCost = function() {
  return /** @type{?proto.Protos.CurrencyItem} */ (
    jspb.Message.getWrapperField(this, proto.Protos.CurrencyItem, 15));
};


/** @param {?proto.Protos.CurrencyItem|undefined} value */
proto.Protos.StatMod.prototype.setLevelCost = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.Protos.StatMod.prototype.clearLevelCost = function() {
  this.setLevelCost(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatMod.prototype.hasLevelCost = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.StatModStat = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.StatModStat.repeatedFields_, null);
};
goog.inherits(proto.Protos.StatModStat, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.StatModStat.displayName = 'proto.Protos.StatModStat';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.StatModStat.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.StatModStat.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.StatModStat.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.StatModStat} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.StatModStat.toObject = function(includeInstance, msg) {
  var f, obj = {
    updaterId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stat: (f = msg.getStat()) && proto.Protos.Stat.toObject(includeInstance, f),
    rollList: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.StatModStat}
 */
proto.Protos.StatModStat.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.StatModStat;
  return proto.Protos.StatModStat.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.StatModStat} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.StatModStat}
 */
proto.Protos.StatModStat.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdaterId(value);
      break;
    case 2:
      var value = new proto.Protos.Stat;
      reader.readMessage(value,proto.Protos.Stat.deserializeBinaryFromReader);
      msg.setStat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoll(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.StatModStat} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.StatModStat.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.StatModStat.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.StatModStat.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getStat();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.Protos.Stat.serializeBinaryToWriter
    );
  }
  f = this.getRollList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional string updater_id = 1;
 * @return {string}
 */
proto.Protos.StatModStat.prototype.getUpdaterId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.StatModStat.prototype.setUpdaterId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.StatModStat.prototype.clearUpdaterId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatModStat.prototype.hasUpdaterId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Stat stat = 2;
 * @return {?proto.Protos.Stat}
 */
proto.Protos.StatModStat.prototype.getStat = function() {
  return /** @type{?proto.Protos.Stat} */ (
    jspb.Message.getWrapperField(this, proto.Protos.Stat, 2));
};


/** @param {?proto.Protos.Stat|undefined} value */
proto.Protos.StatModStat.prototype.setStat = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.Protos.StatModStat.prototype.clearStat = function() {
  this.setStat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.StatModStat.prototype.hasStat = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated string roll = 3;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.Protos.StatModStat.prototype.getRollList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 3));
};


/** @param {!Array.<string>} value */
proto.Protos.StatModStat.prototype.setRollList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.Protos.StatModStat.prototype.addRoll = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.Protos.StatModStat.prototype.clearRollList = function() {
  this.setRollList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Protos.Unit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Protos.Unit.repeatedFields_, null);
};
goog.inherits(proto.Protos.Unit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.Protos.Unit.displayName = 'proto.Protos.Unit';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Protos.Unit.repeatedFields_ = [16,18,20,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Protos.Unit.prototype.toObject = function(opt_includeInstance) {
  return proto.Protos.Unit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Protos.Unit} msg The msg instance to transform.
 * @return {!Object}
 */
proto.Protos.Unit.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    definitionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    currentRarity: jspb.Message.getFieldWithDefault(msg, 8, 8),
    currentLevel: jspb.Message.getFieldWithDefault(msg, 9, 0),
    currentXp: jspb.Message.getFieldWithDefault(msg, 10, 0),
    promotionRecipeReference: jspb.Message.getFieldWithDefault(msg, 12, ""),
    skillList: jspb.Message.toObjectList(msg.getSkillList(),
    proto.Protos.Skill.toObject, includeInstance),
    unitStat: (f = msg.getUnitStat()) && proto.Protos.StatDef.toObject(includeInstance, f),
    equipmentList: jspb.Message.toObjectList(msg.getEquipmentList(),
    proto.Protos.EquipmentSlot.toObject, includeInstance),
    currentTier: jspb.Message.getFieldWithDefault(msg, 19, 1),
    equippedStatModOldList: jspb.Message.getField(msg, 20),
    equippedStatModList: jspb.Message.toObjectList(msg.getEquippedStatModList(),
    proto.Protos.StatMod.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Protos.Unit}
 */
proto.Protos.Unit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Protos.Unit;
  return proto.Protos.Unit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Protos.Unit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Protos.Unit}
 */
proto.Protos.Unit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefinitionId(value);
      break;
    case 8:
      var value = /** @type {!proto.Protos.Rarity} */ (reader.readEnum());
      msg.setCurrentRarity(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentXp(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromotionRecipeReference(value);
      break;
    case 16:
      var value = new proto.Protos.Skill;
      reader.readMessage(value,proto.Protos.Skill.deserializeBinaryFromReader);
      msg.addSkill(value);
      break;
    case 17:
      var value = new proto.Protos.StatDef;
      reader.readMessage(value,proto.Protos.StatDef.deserializeBinaryFromReader);
      msg.setUnitStat(value);
      break;
    case 18:
      var value = new proto.Protos.EquipmentSlot;
      reader.readMessage(value,proto.Protos.EquipmentSlot.deserializeBinaryFromReader);
      msg.addEquipment(value);
      break;
    case 19:
      var value = /** @type {!proto.Protos.UnitTier} */ (reader.readEnum());
      msg.setCurrentTier(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.addEquippedStatModOld(value);
      break;
    case 21:
      var value = new proto.Protos.StatMod;
      reader.readMessage(value,proto.Protos.StatMod.deserializeBinaryFromReader);
      msg.addEquippedStatMod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.Protos.Unit} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Unit.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Protos.Unit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.Protos.Unit.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(this, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {!proto.Protos.Rarity} */ (jspb.Message.getField(this, 8));
  if (f != null) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 9));
  if (f != null) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(this, 10));
  if (f != null) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(this, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = this.getSkillList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.Protos.Skill.serializeBinaryToWriter
    );
  }
  f = this.getUnitStat();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.Protos.StatDef.serializeBinaryToWriter
    );
  }
  f = this.getEquipmentList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      18,
      f,
      proto.Protos.EquipmentSlot.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.Protos.UnitTier} */ (jspb.Message.getField(this, 19));
  if (f != null) {
    writer.writeEnum(
      19,
      f
    );
  }
  f = this.getEquippedStatModOldList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      20,
      f
    );
  }
  f = this.getEquippedStatModList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.Protos.StatMod.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.Protos.Unit.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.Protos.Unit.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.Protos.Unit.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string definition_id = 2;
 * @return {string}
 */
proto.Protos.Unit.prototype.getDefinitionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.Protos.Unit.prototype.setDefinitionId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.Protos.Unit.prototype.clearDefinitionId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasDefinitionId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Rarity current_rarity = 8;
 * @return {!proto.Protos.Rarity}
 */
proto.Protos.Unit.prototype.getCurrentRarity = function() {
  return /** @type {!proto.Protos.Rarity} */ (jspb.Message.getFieldWithDefault(this, 8, 8));
};


/** @param {!proto.Protos.Rarity} value */
proto.Protos.Unit.prototype.setCurrentRarity = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.Protos.Unit.prototype.clearCurrentRarity = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasCurrentRarity = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int32 current_level = 9;
 * @return {number}
 */
proto.Protos.Unit.prototype.getCurrentLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.Protos.Unit.prototype.setCurrentLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.Protos.Unit.prototype.clearCurrentLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasCurrentLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 current_xp = 10;
 * @return {number}
 */
proto.Protos.Unit.prototype.getCurrentXp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.Protos.Unit.prototype.setCurrentXp = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.Protos.Unit.prototype.clearCurrentXp = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasCurrentXp = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string promotion_recipe_reference = 12;
 * @return {string}
 */
proto.Protos.Unit.prototype.getPromotionRecipeReference = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.Protos.Unit.prototype.setPromotionRecipeReference = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.Protos.Unit.prototype.clearPromotionRecipeReference = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasPromotionRecipeReference = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * repeated Skill skill = 16;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.Skill>}
 */
proto.Protos.Unit.prototype.getSkillList = function() {
  return /** @type{!Array.<!proto.Protos.Skill>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.Skill, 16));
};


/** @param {!Array.<!proto.Protos.Skill>} value */
proto.Protos.Unit.prototype.setSkillList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.Protos.Skill=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.Skill}
 */
proto.Protos.Unit.prototype.addSkill = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.Protos.Skill, opt_index);
};


proto.Protos.Unit.prototype.clearSkillList = function() {
  this.setSkillList([]);
};


/**
 * optional StatDef unit_stat = 17;
 * @return {?proto.Protos.StatDef}
 */
proto.Protos.Unit.prototype.getUnitStat = function() {
  return /** @type{?proto.Protos.StatDef} */ (
    jspb.Message.getWrapperField(this, proto.Protos.StatDef, 17));
};


/** @param {?proto.Protos.StatDef|undefined} value */
proto.Protos.Unit.prototype.setUnitStat = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.Protos.Unit.prototype.clearUnitStat = function() {
  this.setUnitStat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasUnitStat = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * repeated EquipmentSlot equipment = 18;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.EquipmentSlot>}
 */
proto.Protos.Unit.prototype.getEquipmentList = function() {
  return /** @type{!Array.<!proto.Protos.EquipmentSlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.EquipmentSlot, 18));
};


/** @param {!Array.<!proto.Protos.EquipmentSlot>} value */
proto.Protos.Unit.prototype.setEquipmentList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 18, value);
};


/**
 * @param {!proto.Protos.EquipmentSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.EquipmentSlot}
 */
proto.Protos.Unit.prototype.addEquipment = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 18, opt_value, proto.Protos.EquipmentSlot, opt_index);
};


proto.Protos.Unit.prototype.clearEquipmentList = function() {
  this.setEquipmentList([]);
};


/**
 * optional UnitTier current_tier = 19;
 * @return {!proto.Protos.UnitTier}
 */
proto.Protos.Unit.prototype.getCurrentTier = function() {
  return /** @type {!proto.Protos.UnitTier} */ (jspb.Message.getFieldWithDefault(this, 19, 1));
};


/** @param {!proto.Protos.UnitTier} value */
proto.Protos.Unit.prototype.setCurrentTier = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.Protos.Unit.prototype.clearCurrentTier = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.Protos.Unit.prototype.hasCurrentTier = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated string equipped_stat_mod_old = 20;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<string>}
 */
proto.Protos.Unit.prototype.getEquippedStatModOldList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getField(this, 20));
};


/** @param {!Array.<string>} value */
proto.Protos.Unit.prototype.setEquippedStatModOldList = function(value) {
  jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.Protos.Unit.prototype.addEquippedStatModOld = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


proto.Protos.Unit.prototype.clearEquippedStatModOldList = function() {
  this.setEquippedStatModOldList([]);
};


/**
 * repeated StatMod equipped_stat_mod = 21;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.Protos.StatMod>}
 */
proto.Protos.Unit.prototype.getEquippedStatModList = function() {
  return /** @type{!Array.<!proto.Protos.StatMod>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.Protos.StatMod, 21));
};


/** @param {!Array.<!proto.Protos.StatMod>} value */
proto.Protos.Unit.prototype.setEquippedStatModList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.Protos.StatMod=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Protos.StatMod}
 */
proto.Protos.Unit.prototype.addEquippedStatMod = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.Protos.StatMod, opt_index);
};


proto.Protos.Unit.prototype.clearEquippedStatModList = function() {
  this.setEquippedStatModList([]);
};


/**
 * @enum {number}
 */
proto.Protos.CampaignElementProgress = {
  HIDDEN: 1,
  LOCKED: 2,
  UNLOCKED: 3,
  COMPLETEONESTAR: 5,
  COMPLETETWOSTAR: 6,
  COMPLETETHREESTAR: 7
};

/**
 * @enum {number}
 */
proto.Protos.CampaignNodeDifficulty = {
  NOTSET: 0,
  NORMALDIFF: 4,
  HARDDIFF: 5,
  NIGHTMAREDIFF: 6,
  SPECIALDIFF: 7,
  IDIFF: 8,
  IIDIFF: 9,
  IIIDIFF: 10,
  IVDIFF: 11,
  VDIFF: 12,
  VIDIFF: 13
};

/**
 * @enum {number}
 */
proto.Protos.CurrencyType = {
  GRIND: 1,
  PREMIUM: 2,
  REALMONEY: 3,
  SOCIAL: 4,
  IGCEVENTKEYCARD: 8,
  XPEVENTKEYCARD: 9,
  PVPCURRENCY: 10,
  FORCEPOINT: 11,
  PVPSHIPCURRENCY: 12,
  FREE: 13,
  WARSHIPCURRENCY: 14,
  GRINDTICKET: 15,
  SHARDCURRENCY: 16,
  GUILDCURRENCY: 17,
  GUILDBANKCURRENCY: 18,
  SHIPGRIND: 19,
  GUILDRAIDCURRENCY01: 20,
  GUILDRAIDCURRENCY02: 21,
  GUILDRAIDCURRENCY03: 22,
  GUILDRAIDCURRENCY04: 23,
  GUILDRAIDCURRENCY05: 24,
  GUILDRAIDCURRENCY06: 25,
  GUILDRAIDCURRENCY07: 26,
  GUILDRAIDCURRENCY08: 27,
  GUILDRAIDCURRENCY09: 28,
  GUILDRAIDCURRENCY10: 29,
  GUILDRAIDCURRENCY11: 30,
  GUILDRAIDCURRENCY12: 31
};

/**
 * @enum {number}
 */
proto.Protos.EnrollmentStatus = {
  ENROLLMENTOPEN: 1,
  ENROLLMENTINVITE: 2,
  ENROLLMENTCLOSED: 3
};

/**
 * @enum {number}
 */
proto.Protos.GuildInviteType = {
  GUILDJOINREQUEST: 1,
  GUILDINVITATION: 2
};

/**
 * @enum {number}
 */
proto.Protos.GuildMemberLevel = {
  GUILDPENDING: 1,
  GUILDMEMBER: 2,
  GUILDOFFICER: 3,
  GUILDLEADER: 4
};

/**
 * @enum {number}
 */
proto.Protos.MemberContributionType = {
  CONTRIBUTIONTYPECOMMENDATION: 1,
  CONTRIBUTIONTYPETRIBUTE: 2,
  CONTRIBUTIONTYPEDONATION: 3
};

/**
 * @enum {number}
 */
proto.Protos.RaidState = {
  RAIDINPROGRESS: 1,
  RAIDINTALLY: 2,
  RAIDCOMPLETE: 3,
  RAIDEXPIRED: 4
};

/**
 * @enum {number}
 */
proto.Protos.Rarity = {
  ONESTAR: 1,
  TWOSTAR: 2,
  THREESTAR: 3,
  FOURSTAR: 4,
  FIVESTAR: 5,
  SIXSTAR: 6,
  SEVENSTAR: 7,
  NOSTAR: 8
};

/**
 * @enum {number}
 */
proto.Protos.StatModTier = {
  STATMODTIER01: 1,
  STATMODTIER02: 2,
  STATMODTIER03: 3,
  STATMODTIER04: 4,
  STATMODTIER05: 5
};

/**
 * @enum {number}
 */
proto.Protos.UnitStat = {
  UNITSTATMAXHEALTH: 1,
  UNITSTATSTRENGTH: 2,
  UNITSTATAGILITY: 3,
  UNITSTATINTELLIGENCE: 4,
  UNITSTATSPEED: 5,
  UNITSTATATTACKDAMAGE: 6,
  UNITSTATABILITYPOWER: 7,
  UNITSTATARMOR: 8,
  UNITSTATSUPPRESSION: 9,
  UNITSTATARMORPENETRATION: 10,
  UNITSTATSUPPRESSIONPENETRATION: 11,
  UNITSTATDODGERATING: 12,
  UNITSTATDEFLECTIONRATING: 13,
  UNITSTATATTACKCRITICALRATING: 14,
  UNITSTATABILITYCRITICALRATING: 15,
  UNITSTATCRITICALDAMAGE: 16,
  UNITSTATACCURACY: 17,
  UNITSTATRESISTANCE: 18,
  UNITSTATDODGEPERCENTADDITIVE: 19,
  UNITSTATDEFLECTIONPERCENTADDITIVE: 20,
  UNITSTATATTACKCRITICALPERCENTADDITIVE: 21,
  UNITSTATABILITYCRITICALPERCENTADDITIVE: 22,
  UNITSTATARMORPERCENTADDITIVE: 23,
  UNITSTATSUPPRESSIONPERCENTADDITIVE: 24,
  UNITSTATARMORPENETRATIONPERCENTADDITIVE: 25,
  UNITSTATSUPPRESSIONPENETRATIONPERCENTADDITIVE: 26,
  UNITSTATHEALTHSTEAL: 27,
  UNITSTATMAXSHIELD: 28,
  UNITSTATSHIELDPENETRATION: 29,
  UNITSTATHEALTHREGEN: 30,
  UNITSTATATTACKDAMAGEPERCENTADDITIVE: 31,
  UNITSTATABILITYPOWERPERCENTADDITIVE: 32,
  UNITSTATDODGENEGATEPERCENTADDITIVE: 33,
  UNITSTATDEFLECTIONNEGATEPERCENTADDITIVE: 34,
  UNITSTATATTACKCRITICALNEGATEPERCENTADDITIVE: 35,
  UNITSTATABILITYCRITICALNEGATEPERCENTADDITIVE: 36,
  UNITSTATDODGENEGATERATING: 37,
  UNITSTATDEFLECTIONNEGATERATING: 38,
  UNITSTATATTACKCRITICALNEGATERATING: 39,
  UNITSTATABILITYCRITICALNEGATERATING: 40,
  UNITSTATOFFENSE: 41,
  UNITSTATDEFENSE: 42,
  UNITSTATDEFENSEPENETRATION: 43,
  UNITSTATEVASIONRATING: 44,
  UNITSTATCRITICALRATING: 45,
  UNITSTATEVASIONNEGATERATING: 46,
  UNITSTATCRITICALNEGATERATING: 47,
  UNITSTATOFFENSEPERCENTADDITIVE: 48,
  UNITSTATDEFENSEPERCENTADDITIVE: 49,
  UNITSTATDEFENSEPENETRATIONPERCENTADDITIVE: 50,
  UNITSTATEVASIONPERCENTADDITIVE: 51,
  UNITSTATEVASIONNEGATEPERCENTADDITIVE: 52,
  UNITSTATCRITICALCHANCEPERCENTADDITIVE: 53,
  UNITSTATCRITICALNEGATECHANCEPERCENTADDITIVE: 54,
  UNITSTATMAXHEALTHPERCENTADDITIVE: 55,
  UNITSTATMAXSHIELDPERCENTADDITIVE: 56,
  UNITSTATSPEEDPERCENTADDITIVE: 57,
  UNITSTATCOUNTERATTACKRATING: 58,
  UNITSTATTAUNT: 59
};

/**
 * @enum {number}
 */
proto.Protos.UnitTier = {
  TIER01: 1,
  TIER02: 2,
  TIER03: 3,
  TIER04: 4,
  TIER05: 5,
  TIER06: 6,
  TIER07: 7,
  TIER08: 8,
  TIER09: 9,
  TIER10: 10,
  TIER11: 11,
  TIER12: 12,
  TIER13: 13,
  TIER14: 14,
  TIER15: 15,
  TIER16: 16,
  TIER17: 17,
  TIER18: 18,
  TIER19: 19,
  TIER20: 20
};

goog.object.extend(exports, proto.Protos);
